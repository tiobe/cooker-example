    /**
     * Heating up a plate
     */
    @Test
    void heating_plate() {
        final CookerPlate cookerPlate = new CookerPlate();
        assertEquals(cookerPlate.Temperature(), "cold");
        cookerPlate.heat();
        assertEquals(cookerPlate.Temperature(), "warm");
        cookerPlate.heat();
        assertEquals(cookerPlate.Temperature(), "hot");
    }

    /**
     * Heating up 2 plates
     */
    @Test
    void heating_two_plates() {
        final CookerPlate cookerPlate1 = new CookerPlate();
        final CookerPlate cookerPlate2 = new CookerPlate();
        assertEquals(cookerPlate1.Temperature(), "cold");
        assertEquals(cookerPlate2.Temperature(), "cold");
        cookerPlate1.heat();
        assertEquals(cookerPlate1.Temperature(), "warm");
        assertEquals(cookerPlate2.Temperature(), "cold");
        cookerPlate2.heat();
        assertEquals(cookerPlate1.Temperature(), "warm");
        assertEquals(cookerPlate2.Temperature(), "warm");
        cookerPlate2.heat();
        assertEquals(cookerPlate1.Temperature(), "warm");
        assertEquals(cookerPlate2.Temperature(), "hot");
    }

    /**
     * Heating and cooling a plate
     */
    @Test
    void Heating_and_cooling_plate(){
        final CookerPlate cookerPlate = new CookerPlate();
        assertEquals(cookerPlate.Temperature(), "cold");
        cookerPlate.heat();
        assertEquals(cookerPlate.Temperature(), "warm");
        cookerPlate.cool();
        assertEquals(cookerPlate.Temperature(), "cold");
    }

    /**
     * Full State transition coverage
     * Hitting all possible transitions in the diagram
     */
    @Test
    void Full_transition_coverage(){
        final CookerPlate cookerPlate = new CookerPlate();
        assertEquals(cookerPlate.Temperature(), "cold");
        cookerPlate.cool();
        assertEquals(cookerPlate.Temperature(), "cold");
        cookerPlate.heat();
        assertEquals(cookerPlate.Temperature(), "warm");
        cookerPlate.heat();
        assertEquals(cookerPlate.Temperature(), "hot");
        cookerPlate.heat();
        assertEquals(cookerPlate.Temperature(), "hot");
        cookerPlate.cool();
        assertEquals(cookerPlate.Temperature(), "warm");
        cookerPlate.cool();
        assertEquals(cookerPlate.Temperature(), "cold");
    }